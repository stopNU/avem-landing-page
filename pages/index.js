import Head from "next/head";
import DefaultLayout from "../layouts";
import styles from "../styles/Home.module.scss";

import Header from "../components/Header/Header";
import HeroSection from "../components/UI/HeroSection";
import SectionWrapper from "../components/UI/SectionWrapper";
import ContentWrapper from "../components/UI/ContentWrapper";

import SliceZone from "../components/slices/SliceZone";
import { Client } from "../utils/prismicHelpers";
import { RichText } from "prismic-reactjs";
import { linkResolver } from "../prismic-configuration";

export default function Home(props) {
  const { data } = props.doc;

  console.log("props", props);

  return (
    <DefaultLayout>
      <div className={styles.container}>
        <Head>
          <title>Avem Finance - The DeFi 3.0 for Securities</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className={styles.main}>
          <Header menu={props.menu} />
          <HeroSection
            title={data.header_title[0].text}
            text={data.header_text}
            imageUrl={data.header_background_image.url}
          />
          <SectionWrapper id="about">
            <ContentWrapper>
              <div>
                <h2
                  dangerouslySetInnerHTML={{
                    __html: data.about_title[0].text,
                  }}
                ></h2>
                <RichText
                  render={data.about_description}
                  linkResolver={linkResolver}
                />
              </div>
            </ContentWrapper>
          </SectionWrapper>

          {data.page_content && <SliceZone sliceZone={data.page_content} />}
        </main>

        <footer className={styles.footer}>Footer</footer>
      </div>
    </DefaultLayout>
  );
}

export async function getStaticProps({ preview = null, previewData = {} }) {
  const { ref } = previewData;

  const client = Client();

  const doc =
    (await client.getSingle("landing_page", ref ? { ref } : null)) || {};
  const menu =
    (await client.getSingle("main_navigation", ref ? { ref } : null)) || {};

  return {
    props: {
      doc,
      menu,
      preview,
    },
  };
}
